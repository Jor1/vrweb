什么是A-Frame？
    A-Frame（https://aframe.io/）是一个开源框架，用于使用自定义的HTML元素创建WebVR体验，
    可用于在桌面浏览器、智能手机以及 Oculus Rift（一款虚拟现实设备，头戴式显示器）上建立虚拟场景，
    A-Frame 可以让创建 WebVR 体验变得更简单。
为什么使用A-Frame？
    A-Frame 设计成 web 开发者很熟悉的模样。它封装了 WebGL 的功能到 HTML 自定义元素，
    有了这个框架，Web程序员无需学习一门全新的语言或者类似于Unity这样的三维引擎就可以在Web开发中加入虚拟现实支持，
    所以创建一个高性能的虚拟现实体验就像下列代码那样简单：
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title></title>
        <script src="dist/aframe-v0.3.0.js"></script>
    </head>
    <body>
        <a-scene>
            <a-sphere position="0 1.25 -1" radius="1.25" color="#EF2D5E"></a-sphere>
            <a-box position="-1 0.5 1" rotation="0 45 0" width="1" height="1" depth="1"  color="#4CC3D9"></a-box>
            <a-cylinder position="1 0.75 1" radius="0.5" height="1.5" color="#FFC65D"></a-cylinder>
            <a-plane rotation="-90 0 0" width="4" height="4" color="#7BC8A4"></a-plane>

            <a-sky color="#ECECEC"></a-sky>
            <a-entity position="0 0 3.8">
                <a-camera></a-camera>
            </a-entity>
        </a-scene>
    </body>
    </html>

创建一个基本的场景
添加一个box
    <a-scene>
      <a-box color="#6173F4" width="2" height="4" depth="2"></a-box>
    </a-scene>
    就像普通的HTML元素一样，我们可以通过设置HTML属性设置元素。在这里，我们为盒子定义了颜色，宽度，高度，深度。
    平板显示器默认的控制方案，让我们可以通过单击拖动鼠标和WASD键的效果。使用虚拟现实后，默认的控制方案将是头戴VR设备环顾周围控制视角，可以在房间随意走动浏览场景效果。
转换box
    <a-scene>
      <a-box color="#6173F4" width="2" height="4" depth="2"
             position="-10 2 -5" rotation="0 0 45" scale="2 0.5 3"></a-box>
    </a-scene>
    A使用右手坐标系统：
    x轴正方向是“右”
    y轴正方向是“上”
    z轴正方向是从屏幕指向我们
    基本距离单位定义为米。当为VR设计场景时，重要的是要考虑我们创建的对象的真实世界规模.。一个高度为“100”的盒子在我们的电脑屏幕上看起来很普通，但是在虚拟现实中，这个盒子会显得很庞大.。
    基本旋转单位定义为度。使用右手定则，确定旋转的正方向。
    平移，旋转和缩放框，我们可以配置的位置，旋转和缩放组件：
为box添加材质
    <a-scene>
        <a-assets>
            <img id="texture" src="images/black.png">
        </a-assets>
        <a-box color="#6173F4" width="2" height="4" depth="2"
               position="-5 2 -5" rotation="0 0 45" scale="2 0.5 3"
               src="#texture"></a-box>
    </a-scene>
    我们可以通过src属性插入图片或视频作为盒子的纹理图像，为了确保颜色不与纹理混合，我们将背景颜色设置为白色
    我们可以使用一个纹理图像的框，图像或视频使用src属性。为了确保颜色不与纹理混合，我们将背景颜色设置为白色.：
增加动画效果
    <a-scene>
        <a-assets>
            <img id="texture" src="images/70.jpg">
        </a-assets>
        <a-box color="#fff" width="2" height="4" depth="2"
               position="-5 2 -7" rotation="0 0 0" scale="1 1 1"
               src="#texture">
            <a-animation attribute="rotation" repeat="indefinite" to="0 360 0"></a-animation>
        </a-box>
    </a-scene>
    我们可以使用内置的动画系统为盒子添加动画，我们将< a-animation >元素做为盒子的子元素，并插入值。让我们无限期地旋转盒子，给场景添加一些动作.：
增加交互
    <a-scene>
        <a-assets>
            <img id="texture" src="images/70.jpg">
        </a-assets>
        <a-box color="#fff" width="2" height="4" depth="2"
               position="-5 2 -7" rotation="0 0 0" scale="1 1 1"
               src="#texture">
            <a-animation attribute="rotation" begin="click" repeat="indefinite" to="0 360 0"></a-animation>
        </a-box>
        <a-camera position="0 1.8 0">
            <a-cursor color="#2E3A87"></a-cursor>
        </a-camera>
    </a-scene>
    想要实现与盒子的交互，我们可以使用光标元素，把它作为相机的子元素，它将被固定到屏幕上。
    接下来，为动画添加begin属性。当光标对盒子进行点击时，动画就会开始。
增加灯光
    <a-scene>
        <a-assets>
            <img id="texture" src="images/70.jpg">
        </a-assets>
        <a-box color="#fff" width="2" height="4" depth="2"
               position="-5 2 -7" rotation="0 0 0" scale="1 1 1"
               src="#texture">
            <a-animation attribute="rotation" begin="click" repeat="indefinite" to="0 360 0"></a-animation>
        </a-box>
        <a-light type="point" color="#fff" position="0 2 0" look-at="a-box"></a-light>
        <a-camera position="0 1.8 0">
            <a-cursor color="#2E3A87"></a-cursor>
        </a-camera>
    </a-scene>
添加天空背景
    <a-scene>
        <a-assets>
            <img id="texture" src="images/70.jpg">
        </a-assets>
        <a-box color="#fff" width="2" height="4" depth="2"
               position="-5 2 -7" rotation="0 0 0" scale="1 1 1"
               src="#texture">
            <a-animation attribute="rotation" begin="click" repeat="indefinite" to="0 360 0"></a-animation>
        </a-box>
        <a-light type="point" color="#fff" position="0 2 0" look-at="a-box"></a-light>
        <a-sky color="#9bd5e7"></a-sky>
        <a-camera position="0 1.8 0">
            <a-cursor color="#2E3A87"></a-cursor>
        </a-camera>
    </a-scene>
